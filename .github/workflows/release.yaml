name: Releases

on:
  push:
    tags:
      # These aren't regexps. They are "Workflow Filter patterns"
      - v[0-9]+.[0-9]+.[0-9]
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-test.[0-9]+

env:
  TELEPRESENCE_REGISTRY: ghcr.io/telepresenceio

jobs:
  build-release:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        arch:
          - amd64
          - arm64
        exclude:
          - runner: windows-latest
            arch: arm64
    runs-on: ${{ matrix.runner }}
    env:
      GOARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install-dependencies
        name: install dependencies
      - name: set version
        shell: bash
        run: echo "TELEPRESENCE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: generate binaries
        run: make release-binary
      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: build-output/release
          retention-days: 1

  push-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install-dependencies
        name: install dependencies
      - name: set version
        shell: bash
        run: echo "TELEPRESENCE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Upload Docker images
        run: |
          make push-images-x

  publish-release:
    runs-on: ubuntu-latest
    needs:
      - build-release
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Determine if version is RC, TEST, or GA
        id: semver_check
        run: |
          if [[ "${{ github.ref_name }}" =~ ^v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+$ ]]; then
            echo "MAKE_LATEST=false" >> $GITHUB_ENV
            echo "DRAFT=false" >> $GITHUB_ENV
            echo "PRERELEASE=true" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" =~ ^v[0-9]+.[0-9]+.[0-9]+-test.[0-9]+$ ]]; then
            echo "MAKE_LATEST=false" >> $GITHUB_ENV
            echo "DRAFT=true" >> $GITHUB_ENV
            echo "PRERELEASE=false" >> $GITHUB_ENV
          else
            echo "MAKE_LATEST=true" >> $GITHUB_ENV
            echo "DRAFT=false" >> $GITHUB_ENV
            echo "PRERELEASE=false" >> $GITHUB_ENV
          fi
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "binaries/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ env.PRERELEASE }}
          makeLatest: ${{ env.MAKE_LATEST }}
          draft: ${{ env.DRAFT }}
          tag: ${{ github.ref_name }}
          body: |
            ## Official Release Artifacts
            ### Linux
               - ðŸ“¦ [telepresence-linux-amd64](https://app.getambassador.io/download/tel2oss/releases/download/${{ github.ref_name }}/telepresence-linux-amd64)
               - ðŸ“¦ [telepresence-linux-arm64](https://app.getambassador.io/download/tel2oss/releases/download/${{ github.ref_name }}/telepresence-linux-arm64)
            ### OSX Darwin
               - ðŸ“¦ [telepresence-darwin-amd64](https://app.getambassador.io/download/tel2oss/releases/download/${{ github.ref_name }}/telepresence-darwin-amd64)
               - ðŸ“¦ [telepresence-darwin-arm64](https://app.getambassador.io/download/tel2oss/releases/download/${{ github.ref_name }}/telepresence-darwin-arm64)
            ### Windows
               - ðŸ“¦ [telepresence-windows-amd64.zip](https://app.getambassador.io/download/tel2oss/releases/download/${{ github.ref_name }}/telepresence-windows-amd64.zip)

            For more builds across platforms and architectures, see the `Assets` section below.
            And for more information, visit our [installation docs](https://www.telepresence.io/docs/latest/quick-start/).

            ![Assets](https://static.scarf.sh/a.png?x-pxid=d842651a-2e4d-465a-98e1-4808722c01ab)

  test-release:
    needs:
      - push-images
      - publish-release
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        arch:
          - amd64
          - arm64
        exclude:
          - runner: windows-latest
            arch: arm64
    runs-on: ${{ matrix.runner }}
    env:
      GOARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
      - name: Test release
        uses: ./.github/actions/test-release
        with:
          release_version: ${{ github.ref_name }}
          arch: ${{ matrix.arch }}
